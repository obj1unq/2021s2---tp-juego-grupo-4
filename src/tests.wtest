import wollok.game.*
import configuraciones.*
import jugador.*
import Fantasma.*

//modificar el nombre del test
describe "Tests de Juego" {
	
	method initialize() {
		game.clear()
		game.addVisual(jugador)
//		game.start()
	}

 
test "Comprobacion de estado" {
    
    jugador.recibirDanio(50)
    assert.equals(50,jugador.vida())
    assert.notThat(jugador.estaMuerto())
    
    jugador.recibirDanio(50)
    assert.equals(0,jugador.vida())
    assert.that(jugador.estaMuerto())
	}
	
	
test "Movimiento valido" {
    var posicionAVer = game.at(2,1)
    assert.notEquals(posicionAVer,jugador.position()) 
    
    posicionAVer = game.at(3,1)
    assert.equals(posicionAVer,jugador.position()) 
    
    jugador.mover(arriba)
    jugador.mover(arriba)
    posicionAVer = game.at(3,3)
    assert.equals(posicionAVer,jugador.position()) 
    }
	
		
test "Movimiento invalido" {
    var posicionAVer = game.at(3,1)
    assert.equals(posicionAVer,jugador.position()) 
    
    jugador.mover(abajo)
    jugador.mover(abajo)
    posicionAVer = game.at(3,-1)
    assert.notEquals(posicionAVer,jugador.position())
    
    posicionAVer = game.at(3,0)
    assert.equals(posicionAVer,jugador.position()) 
    
    jugador.mover(izquierda)
    jugador.mover(izquierda)
    jugador.mover(izquierda)
    posicionAVer = game.at(0,0)
    assert.equals(posicionAVer,jugador.position()) 
    
    jugador.mover(izquierda)
    posicionAVer = game.at(-1,0)
    assert.notEquals(posicionAVer,jugador.position())
    }

//+--------------------------------------------------------------------------------------------------+
//|                                 AREA DE ATAQUE                                                   |
//+--------------------------------------------------------------------------------------------------+  

test "fantasmasRestantes"{
	const fantasma4 = new Fantasma( position = game.at(game.width() - 1, game.height() - 1))
  	fantasmas.fantasmasRestantes(1)
  	assert.equals(1,fantasmas.fantasmasRestantes())
      
  	
  	 fantasma4.tomarPuntosDeDanio(2) // sigue vivo
  	 fantasma4.tomarPuntosDeDanio(2) // sigue vivo
  	 fantasma4.tomarPuntosDeDanio(2) // sigue vivo
  	 assert.equals(1,fantasmas.fantasmasRestantes())
  	
  	 fantasmas.fantasmaEsLiberado()
  	 assert.equals(0,fantasmas.fantasmasRestantes()) 
  }     		

}